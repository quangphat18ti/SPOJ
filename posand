// i'm wutan
#include <bits/stdc++.h>
#define io_faster ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
#define EL cout<<'\n'
#define pli pair<ll,int>
#define pll pair<ll,ll>
#define pii pair<int,int>
#define fi first
#define se second
#define sz(a) int(a.size())
#define FU(x,a,b) for(int x=int(a);x<=int(b);x++)
#define FD(x,a,b) for(int x=int(a);x>=int(b);x--)
#define PROB "PositiveAND"
using namespace std;
typedef long long ll;
typedef double db;
template <typename T>
inline void read(T& x){
    bool Neg = false;
    char c;
    for (c = getchar(); c < '0' | c > '9'; c = getchar())
        if (c == '-') Neg = !Neg;
    x = c - '0';
    for (c = getchar(); c >= '0' && c <= '9'; c = getchar())
        x = x * 10 + c - '0';
    if (Neg) x = -x;
}
template <typename T>
inline void write(T x){
    if (x < 0)
        putchar('-'); x = -x;
    T p = 1;
    for (T temp = x / 10; temp > 0; temp /= 10) p *= 10;
    for (; p > 0; x %= p, p /= 10) putchar(x / p + '0');
}
void file(){
#ifndef ONLINE_JUDGE
	freopen(PROB".inp","r",stdin);
	freopen(PROB".out","w",stdout);
#endif
}
const int N = 1e5 + 2;
int n, ok[N], x[N], p[N];
int a[] = {1, 3, 2, 6, 4, 5, 7};
bool findd;
void readinp(){
    cin >> n;
}
void bt(int i){
    if (findd) return;
    FU(j, 1, n) if (!ok[j]){
        if (i > 1 && (j & x[i-1]) == 0) continue;
        ok[j] = 1;
        x[i] = j;
        if (i == n){
            FU(k, 1, n) cout << x[k] << ' ';
            EL;
            ok[j] = 0;
            findd = true;
            return;
        }
        else bt(i + 1);
        ok[j] = 0;
    }
}
bool check (int d){
    int c = 1;
    while (c < d){
        c = c * 2;
        if (c == d) return true;
    }
    return false;
}
void solve(){
    if (n == 1) {
        cout << 1;EL;
        return;
    }
    if (check(n)){
        cout << -1;EL;
        return;
    }
    if (n <= 7){
        findd = false;
        bt(1);
        return;
    }
    vector < int > d;
    FU(i, 0, 6) d.push_back(a[i]);
    FU(i, 8, n)
        d.push_back(i);
    FU(i, 7, sz(d) - 2){
        if (check(d[i])){
            swap(d[i], d[i+1]);
            i++;
        }
    }
    for (auto i : d) cout << i << ' ';
    EL;
}
int main(){
    io_faster
    file();
    p[0] = 1;
    FU(i, 1, 18)
        p[i] = p[i-1] * 2;
    int t = 1;
    cin >> t;
    while (t--){
        readinp();
        solve();
    }
}
